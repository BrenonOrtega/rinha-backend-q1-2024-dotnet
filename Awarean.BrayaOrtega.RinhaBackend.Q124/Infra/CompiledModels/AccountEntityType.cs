// // <auto-generated />
// using System;
// using System.Reflection;
// using Awarean.BrayaOrtega.RinhaBackend.Q124.Models;
// using Microsoft.EntityFrameworkCore.ChangeTracking;
// using Microsoft.EntityFrameworkCore.Metadata;
// using Microsoft.EntityFrameworkCore.Storage;
// using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

// #pragma warning disable 219, 612, 618
// #nullable disable

// namespace Awarean.BrayaOrtega.RinhaBackend.Q124.Infra.CompiledModels
// {
//     internal partial class AccountEntityType
//     {
//         public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
//         {
//             var runtimeEntityType = model.AddEntityType(
//                 "Awarean.BrayaOrtega.RinhaBackend.Q124.Models.Account",
//                 typeof(Account),
//                 baseEntityType);

//             var id = runtimeEntityType.AddProperty(
//                 "Id",
//                 typeof(int),
//                 propertyInfo: typeof(Account).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
//                 fieldInfo: typeof(Account).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
//                 valueGenerated: ValueGenerated.OnAdd,
//                 afterSaveBehavior: PropertySaveBehavior.Throw,
//                 sentinel: 0);
//             id.TypeMapping = IntTypeMapping.Default.Clone(
//                 comparer: new ValueComparer<int>(
//                     (int v1, int v2) => v1 == v2,
//                     (int v) => v,
//                     (int v) => v),
//                 keyComparer: new ValueComparer<int>(
//                     (int v1, int v2) => v1 == v2,
//                     (int v) => v,
//                     (int v) => v),
//                 providerValueComparer: new ValueComparer<int>(
//                     (int v1, int v2) => v1 == v2,
//                     (int v) => v,
//                     (int v) => v),
//                 mappingInfo: new RelationalTypeMappingInfo(
//                     storeTypeName: "integer"));
//             id.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

//             var limite = runtimeEntityType.AddProperty(
//                 "Limite",
//                 typeof(long),
//                 propertyInfo: typeof(Account).GetProperty("Limite", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
//                 fieldInfo: typeof(Account).GetField("<Limite>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
//                 sentinel: 0L);
//             limite.TypeMapping = LongTypeMapping.Default.Clone(
//                 comparer: new ValueComparer<long>(
//                     (long v1, long v2) => v1 == v2,
//                     (long v) => v.GetHashCode(),
//                     (long v) => v),
//                 keyComparer: new ValueComparer<long>(
//                     (long v1, long v2) => v1 == v2,
//                     (long v) => v.GetHashCode(),
//                     (long v) => v),
//                 providerValueComparer: new ValueComparer<long>(
//                     (long v1, long v2) => v1 == v2,
//                     (long v) => v.GetHashCode(),
//                     (long v) => v));
//             limite.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

//             var saldo = runtimeEntityType.AddProperty(
//                 "Saldo",
//                 typeof(long),
//                 propertyInfo: typeof(Account).GetProperty("Saldo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
//                 fieldInfo: typeof(Account).GetField("<Saldo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
//                 sentinel: 0L);
//             saldo.TypeMapping = LongTypeMapping.Default.Clone(
//                 comparer: new ValueComparer<long>(
//                     (long v1, long v2) => v1 == v2,
//                     (long v) => v.GetHashCode(),
//                     (long v) => v),
//                 keyComparer: new ValueComparer<long>(
//                     (long v1, long v2) => v1 == v2,
//                     (long v) => v.GetHashCode(),
//                     (long v) => v),
//                 providerValueComparer: new ValueComparer<long>(
//                     (long v1, long v2) => v1 == v2,
//                     (long v) => v.GetHashCode(),
//                     (long v) => v));
//             saldo.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

//             var key = runtimeEntityType.AddKey(
//                 new[] { id });
//             runtimeEntityType.SetPrimaryKey(key);

//             return runtimeEntityType;
//         }

//         public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
//         {
//             runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
//             runtimeEntityType.AddAnnotation("Relational:Schema", null);
//             runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
//             runtimeEntityType.AddAnnotation("Relational:TableName", "Account");
//             runtimeEntityType.AddAnnotation("Relational:ViewName", null);
//             runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

//             Customize(runtimeEntityType);
//         }

//         static partial void Customize(RuntimeEntityType runtimeEntityType);
//     }
// }
